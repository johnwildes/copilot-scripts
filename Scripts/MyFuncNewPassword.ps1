# This File contains the function New-Password
# The new password is generated using the following rules:
# - The password must be at least 4 characters long
# - The password must contain at least one uppercase letter, one lowercase letter, one number, and one special character
# - The password must not contain any of the following characters: _~`
# - The password must contain only the following characters: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()
# - The password must be shuffled to ensure randomness

# DISCLAIMER: This script is provided "AS IS" with no warranties, and confers no rights.
# I'm sure someone will come along and point out to me the glaring issues with writing a password generator in PowerShell.  
# For instance it might not truly be random and passwords generated here will be able to be "regenerated" and therefore 
# every password created here will have been compromised.  Plenty of random security password generators out there.  
# This was an exercise for the Copilot to see what it would come up with. 

# Generated by GitHub Copilot
# Edited by: John Wildes
# Date: 23JAN2024
# Version: 1.0.0


function New-Password {
    param (
        [Parameter(Mandatory=$true)]
        [int]$Length,

        [string]$IncludeCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()',

        [string]$ExcludeCharacters = '_~`'
    )
    
    if ($Length -lt 4) {
        throw "Password length must be at least 4 to include one uppercase, one lowercase, one number, and one special character."
    }
    
    $random = New-Object System.Random
    $password = ''

    # Generate one uppercase, one lowercase, one number, and one special character
    $password += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[$random.Next(26)]
    $password += 'abcdefghijklmnopqrstuvwxyz'[$random.Next(26)]
    $password += '0123456789'[$random.Next(10)]
    $password += '!@#$%^&*()'[$random.Next(10)]

    # Fill the rest of the password length with random characters
    while ($password.Length -lt $Length) {
        $char = $IncludeCharacters[$random.Next(0, $IncludeCharacters.Length)]
        if ($ExcludeCharacters -notcontains $char) {
            $password += $char
        }
    }

    # Shuffle the characters in the password to ensure randomness
    $password = -join ($password.ToCharArray() | Sort-Object {Get-Random})
    return $password
}
