# Generated by GitHub Copilot

from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

# Replace with your AccuWeather API key
ACCUWEATHER_API_KEY = "your_accuweather_api_key"
ACCUWEATHER_BASE_URL = "http://dataservice.accuweather.com"

@app.route('/weather', methods=['GET'])
def get_weather():
    """
    Retrieve a 10-day weather forecast for a given ZIP code.

    Query Parameters:
        zipcode (str): The ZIP code for which to retrieve the forecast.

    Returns:
        JSON: A JSON response containing the 10-day weather forecast.
    """
    zipcode = request.args.get('zipcode')
    if not zipcode:
        return jsonify({"error": "ZIP code is required"}), 400

    try:
        # Step 1: Get location key from ZIP code
        location_url = f"{ACCUWEATHER_BASE_URL}/locations/v1/postalcodes/search"
        location_params = {"apikey": ACCUWEATHER_API_KEY, "q": zipcode}
        location_response = requests.get(location_url, params=location_params)
        location_response.raise_for_status()
        location_data = location_response.json()

        if not location_data:
            return jsonify({"error": "Invalid ZIP code"}), 404

        location_key = location_data[0]["Key"]

        # Step 2: Get 10-day forecast using location key
        forecast_url = f"{ACCUWEATHER_BASE_URL}/forecasts/v1/daily/10day/{location_key}"
        forecast_params = {"apikey": ACCUWEATHER_API_KEY, "metric": "true"}
        forecast_response = requests.get(forecast_url, params=forecast_params)
        forecast_response.raise_for_status()
        forecast_data = forecast_response.json()

        return jsonify(forecast_data)

    except requests.exceptions.RequestException as e:
        return jsonify({"error": "Failed to retrieve weather data", "details": str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)
# Generated by GitHub Copilot